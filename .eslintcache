[{"/Users/CalvinCutlass/Desktop/Coding/coding_2020/Ivan Academy/REACT/coin-exchange/src/index.js":"1","/Users/CalvinCutlass/Desktop/Coding/coding_2020/Ivan Academy/REACT/coin-exchange/src/App.js":"2","/Users/CalvinCutlass/Desktop/Coding/coding_2020/Ivan Academy/REACT/coin-exchange/src/reportWebVitals.js":"3","/Users/CalvinCutlass/Desktop/Coding/coding_2020/Ivan Academy/REACT/coin-exchange/src/components/Coin/Coin.jsx":"4","/Users/CalvinCutlass/Desktop/Coding/coding_2020/Ivan Academy/REACT/coin-exchange/src/components/AccountBalance/AccountBalance.jsx":"5","/Users/CalvinCutlass/Desktop/Coding/coding_2020/Ivan Academy/REACT/coin-exchange/src/components/CoinList/CoinList.jsx":"6","/Users/CalvinCutlass/Desktop/Coding/coding_2020/Ivan Academy/REACT/coin-exchange/src/components/CoinHeader/CoinHeader.jsx":"7"},{"size":500,"mtime":1611553226370,"results":"8","hashOfConfig":"9"},{"size":3156,"mtime":1612485172719,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":1611553226371,"results":"11","hashOfConfig":"9"},{"size":852,"mtime":1612481925115,"results":"12","hashOfConfig":"9"},{"size":708,"mtime":1612482505477,"results":"13","hashOfConfig":"9"},{"size":1165,"mtime":1612482421288,"results":"14","hashOfConfig":"9"},{"size":674,"mtime":1611882528203,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1atxsfd",{"filePath":"19","messages":"20","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"18"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"/Users/CalvinCutlass/Desktop/Coding/coding_2020/Ivan Academy/REACT/coin-exchange/src/index.js",[],["33","34"],"/Users/CalvinCutlass/Desktop/Coding/coding_2020/Ivan Academy/REACT/coin-exchange/src/App.js",["35","36"],"import React, {useState, useEffect} from 'react';\nimport CoinList from './components/CoinList/CoinList';\nimport CoinHeader from './components/CoinHeader/CoinHeader';\nimport AccountBalance from './components/AccountBalance/AccountBalance';\n// import { v4 as uuidv4 } from 'uuid';\nimport styled from 'styled-components';\nimport axios from 'axios';\n\n\nconst Div = styled.div`\n    text-align: center;\n    background-color: darkblue;\n    color: #CCCCCC;\n`;\n\nconst COIN_COUNT = 10;\nconst formatPrice = price => parseFloat(Number(price).toFixed(4));\n\n\nfunction App(props) {\n  const [balance, setBalance] = useState(10000);\n  const [showBalance, setShowBalance] = useState(true);\n  const [coinData, setCoinData] = useState([]);\n\n  const componentDidMount = async() => {\n    const response = await axios.get('https://api.coinpaprika.com/v1/coins');\n\n    const coinIds = response.data.slice(0, COIN_COUNT).map(coin => coin.id);\n\n\n    const tickerUrl = 'https://api.coinpaprika.com/v1/tickers/';\n    const promises = coinIds.map(id => axios.get(tickerUrl + id));\n\n    const coinData = await Promise.all(promises);\n    console.log(\"CoinData: \", coinData);\n\n    const coinPriceData = coinData.map(function(response) {\n      const coin = response.data;\n      return {\n        key: coin.id,\n        name: coin.name,\n        ticker: coin.symbol,\n        balance: 0,\n        price: formatPrice(coin.quotes.USD.price),\n      };\n    });\n    setCoinData(coinPriceData);\n  }\n\n  useEffect(() => {\n    if (coinData.length === 0) {\n      //component did mount\n      componentDidMount();\n    }\n    /*else {\n      //component did update\n    }*/\n  });\n\n  // componentDidMount = async() => {\n  //   const response = await axios.get('https://api.coinpaprika.com/v1/tickers');\n  //   const coinData = response.data.slice(0, COIN_COUNT).map(coin => {\n  //     return {\n  //       key: coin.id,\n  //       name: coin.name,\n  //       ticker: coin.symbol,\n  //       balance: 0,\n  //       price: parseFloat(Number(coin.quotes.USD.price).toFixed(4)),\n  //     }\n  //   });\n  //   this.setState({coinData});\n  // }\n\n\n  const handleBalanceVisibilityChange = () => {\n    setShowBalance(oldValue => !oldValue);\n  }\n\n  const handleRefresh = async (valueChangeId) => {\n    const tickerUrl = `https://api.coinpaprika.com/v1/tickers/${valueChangeId}`;\n    const response = await axios.get(tickerUrl);\n    const newPrice = formatPrice(response.data.quotes.USD.price);\n\n    const newCoinData = coinData.map((values) => {\n      let newValues = {...values};\n      if (valueChangeId === values.key) {\n        const randomPercentage = 0.995 + Math.random() * 0.01;\n        newValues.price = newPrice;\n      }\n      return newValues\n    });\n    setCoinData(newCoinData);\n  }\n    return (\n      <Div className=\"App\">\n\n        <CoinHeader />\n        <AccountBalance\n            amount={balance}\n            showBalance={showBalance}\n            handleBalanceVisibilityChange={handleBalanceVisibilityChange}\n          />\n        <CoinList\n            coinData={coinData}\n            showBalance={showBalance}\n            handleRefresh={handleRefresh}\n          />\n\n      </Div>\n    );\n}\n\nexport default App;\n","/Users/CalvinCutlass/Desktop/Coding/coding_2020/Ivan Academy/REACT/coin-exchange/src/reportWebVitals.js",[],"/Users/CalvinCutlass/Desktop/Coding/coding_2020/Ivan Academy/REACT/coin-exchange/src/components/Coin/Coin.jsx",[],["37","38"],"/Users/CalvinCutlass/Desktop/Coding/coding_2020/Ivan Academy/REACT/coin-exchange/src/components/AccountBalance/AccountBalance.jsx",[],"/Users/CalvinCutlass/Desktop/Coding/coding_2020/Ivan Academy/REACT/coin-exchange/src/components/CoinList/CoinList.jsx",[],"/Users/CalvinCutlass/Desktop/Coding/coding_2020/Ivan Academy/REACT/coin-exchange/src/components/CoinHeader/CoinHeader.jsx",[],{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","severity":1,"message":"44","line":21,"column":19,"nodeType":"45","messageId":"46","endLine":21,"endColumn":29},{"ruleId":"43","severity":1,"message":"47","line":87,"column":15,"nodeType":"45","messageId":"46","endLine":87,"endColumn":31},{"ruleId":"39","replacedBy":"48"},{"ruleId":"41","replacedBy":"49"},"no-native-reassign",["50"],"no-negated-in-lhs",["51"],"no-unused-vars","'setBalance' is assigned a value but never used.","Identifier","unusedVar","'randomPercentage' is assigned a value but never used.",["50"],["51"],"no-global-assign","no-unsafe-negation"]